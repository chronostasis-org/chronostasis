networks:
  db_network:

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: next-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
  backend:
    container_name: axum-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/backend
    ports:
      - "8000:8000"
    networks:
      - db_network
  db:
    container_name: server_db_container
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: chronostasis_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "PGPASSWORD=password pg_isready -U postgres -d chronostasis_db",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - db_network
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
      - ./pgpassfile:/pgpassfile
    networks:
      - db_network

volumes:
  db_data:
    driver: local
  pgadmin-data:
    driver: local
